{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","Login.js","Signup.js","LoginSignup.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","Boolean","window","location","hostname","match","Login","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","for","type","id","placeholder","name","required","React","emailRegex","RegExp","formValid","formErrors","valid","values","forEach","val","length","Signup","props","_this","call","handleSubmit","e","preventDefault","state","console","log","concat","full_name","contact_no","e_mail","pswd","error","handleChange","_e$target","target","test","setState","defineProperty","bind","assertThisInitialized","onSubmit","noValidate","onChange","login","Login_Login","signup","Signup_Signup","ReactDOM","render","BrowserRouter","Link","to","Route","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6cf09a58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nexport class Login extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2>Login</h2>\r\n                <hr />\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"email\">Email:</label>\r\n                        <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\" required />\r\n                        <div id=\"validate_name\"></div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"pwd\">Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"pwd\" required/>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn\" >Login</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\n\r\nconst formValid = formErrors => {\r\n    let valid = true;\r\n    \r\n    Object.values(formErrors).forEach(val => {\r\n        val.length > 0 && (valid=false)\r\n    });\r\n    return valid;\r\n}\r\n\r\nexport class Signup extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            full_name: null,\r\n            contact_no: null,\r\n            e_mail: null,\r\n            pswd: null,\r\n            formErrors: {\r\n                full_name: \"\",\r\n                contact_no: \"\",\r\n                e_mail: \"\",\r\n                pswd: \"\"\r\n            }\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(formValid(this.state.formErrors)) {\r\n            console.log(`\r\n                --SUBMITTING-- \r\n                Full Name: ${this.state.full_name}\r\n                Contact Number: ${this.state.contact_no}\r\n                Email: ${this.state.e_mail}\r\n                Password: ${this.state.pswd}\r\n            `)\r\n        }\r\n        else {\r\n            console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n\r\n        const { name, value } = e.target;\r\n        let formErrors = this.state.formErrors;\r\n \r\n        switch(name) {\r\n            case 'full_name': \r\n                formErrors.full_name = value.length < 6 ? \"Minimum 6 characters required\" : \"\";\r\n                break;\r\n\r\n            case 'contact_no':\r\n                formErrors.contact_no = value.length < 10 ? \"Minimum 10 numbers required\" : \"\";\r\n                break;\r\n                \r\n            case 'e_mail': \r\n                formErrors.e_mail = emailRegex.test(value) ? \"\" : \"Invalid Email Address\";\r\n                break;\r\n\r\n            case 'pswd': \r\n                formErrors.pswd = value.length < 8 ? \"Minimum 8 characters required\" : \"\";\r\n                break;        \r\n        \r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({formErrors, [name]: value }, () => console.log(this.state));\r\n    }\r\n    \r\n    render() {\r\n\r\n        const {formErrors} = this.state;\r\n        return(\r\n            <div>\r\n                <h2>Signup</h2>\r\n                <hr />\r\n                <form onSubmit={this.handleSubmit} noValidate>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"full_name\">Full Name:</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"full_name\" placeholder=\"Enter Full Name\" name=\"full_name\" required noValidate onChange={this.handleChange} />\r\n                        {formErrors.full_name.length > 0 && (\r\n                            <span className=\"errorMessage\">{formErrors.full_name}</span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"contact_no\">Contact Number:</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"contact_no\" placeholder=\"Enter Contact Number\" name=\"contact_no\" required noValidate onChange={this.handleChange} />\r\n                        {formErrors.contact_no.length > 0 && (\r\n                            <span className=\"errorMessage\">{formErrors.contact_no}</span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"addr1\">Address Line-1:</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"addr1\" placeholder=\"Enter Address Line 1\" name=\"addr1\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"addr2\">Address Line-2:</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"addr2\" placeholder=\"Enter Address Line 2\" name=\"addr2\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"e_mail\">Email Id:</label>\r\n                        <input type=\"email\" className=\"form-control\" id=\"e_mail\" placeholder=\"Enter Email ID\" name=\"e_mail\" required noValidate onChange={this.handleChange} />\r\n                        {formErrors.e_mail.length > 0 && (\r\n                            <span className=\"errorMessage\">{formErrors.e_mail}</span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"pswd\">Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" id=\"pswd\" placeholder=\"Enter password\" name=\"pswd\" required noValidate onChange={this.handleChange} />\r\n                        {formErrors.pswd.length > 0 && (\r\n                            <span className=\"errorMessage\">{formErrors.pswd}</span>\r\n                        )}\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn\">Sign Up</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport validator from 'validator';\r\nimport {Login} from './Login';\r\nimport {Signup} from './Signup';\r\n\r\nexport function LoginSignup() {\r\n  return(\r\n    <Router>\r\n      <div className=\"container\">\r\n      <nav className=\"navbar\">\r\n        <ul>\r\n            <li>\r\n              <Link to=\"/login\">Login</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/signup\">Signup</Link>\r\n            </li>\r\n          </ul>\r\n          </nav>\r\n        <hr />\r\n        <Route path=\"/login\" component={login} />\r\n        <Route path=\"/signup\" component={signup} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction login() {\r\n  return(\r\n    <Login />\r\n  );\r\n}\r\n\r\nfunction signup() {\r\n  return(\r\n    <Signup />\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {LoginSignup} from './LoginSignup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport validator from 'validator';\n\nReactDOM.render(<LoginSignup />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}